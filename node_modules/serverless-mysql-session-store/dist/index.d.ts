import { ConnectionOptions } from 'mysql2';
import { Store, SessionData } from 'express-session';
export declare class MySQLSessionStore extends Store {
    private config;
    private tableName;
    private state;
    private onReadyPromises;
    constructor(config: ConnectionOptions, tableName?: string);
    onReady(): Promise<void>;
    private resolveReadyPromises;
    private rejectReadyPromises;
    private queryAsync;
    private getConnection;
    isTableCreated(): Promise<boolean>;
    waitUntilTableExists(timeout?: number): Promise<void>;
    createTableIfNotExists(): Promise<void>;
    get(sessionId: string, callback: (err: any, session?: SessionData | null) => void): Promise<void>;
    set(sessionId: string, session: SessionData, callback?: (err?: any) => void): Promise<void>;
    touch(sessionId: string, session: SessionData, callback?: (err?: any) => void): Promise<void>;
    destroy(sessionId: string, callback?: (err?: any) => void): Promise<void>;
    length(callback: (err: any, length?: number | null) => void): Promise<void>;
    clear(callback?: (err?: any) => void): Promise<void>;
    reap(): Promise<void>;
}
